2010-05-25  Miloslav Trmač  <mitr@redhat.com>

	* src/server.py (RPMFileError, RPMFile, SigningContext): Split from
	cmd_sign_rpm.

	* src/utils.py (file_size_in_blocks, path_size_in_blocks): New
	functions.

	* src/server.py (ServersConnection.__send_payload_from_file): Split from
	ServersConnection.send_payload_from_file().

	* src/server.py (ServersConnection.send_payload_from_file): Rename
	parameter.

	* src/server.py (ServersConnection.__send_payload_size): Rename from
	ServersConnection.__start_reply_payload().  All users changed.

	* src/client.py (ClientsConnection.__send_payload_from_file): Split
	from ClientsConnection.send_payload_from_file.

	* src/client.py (ClientsConnection.send_payload_from_file): Rename
	parameter.

	* src/client.py (ClientsConnection.__send_payload_size): Rename from
	ClientsConnection.__start_payload().  All users changed.

	* src/utils.py (sha512_digest): Remove no longer necessary conversions
	between str and buffer.  Fold into callers.
	(_DigestsReader, SHA512Reader, SHA512HMACReader, _DigestsWriter)
	(SHA512Writer, SHA512HMACWriter): New classes.
	* src/client.py (ClientsConnection.connect): Set up
	self.__request_header_writer instead of self.__request_header_digest,
	self.__request_payload_writer instead of self.__request_payload_digest.
	All users updated.
	(ClientsConnection.send_inner): Generate auth keys directly as NSS keys.
	Set up self.__reply_header_reader instead of self.__reply_header_hmac,
	self.__reply_payload_header instead of self.__reply_payload_hmac.  All
	users updated.
	(ClientsConnection.__send_payload_part): Replace by
	self.__request_payload_writer.write(), fold into callers.
	(ClientsConnection.__send_header): Replace by
	self.__request_header_writer.write(), fold into callers.
	(ClientsConnection.__read_header): Replace by
	self.__reply_header_reader.read(), fold into callers.
	* src/server.py (ServersConnection.read_request): Use a single reader
	for computing SHA-512 in all three payload types.  Use utils.copy_data.
	(ServersConnection.read_request): Set up self.__reply_header_writer
	instead of self.__reply_header_hmac, self.__reply_payload_writer instead
	of self.__reply_payload_hmac.  All users updated.
	(ServersConnection.__send_payload): Replace by
	self.__reply_payload_writer.write(), fold into callers.
	(ServersConnection.__send_reply_payload_auth): Replace by
	self.__reply_payload_writer.write_64B_hmac(), fold into callers.

	* src/double_tls.py (OuterBuffer.__recv_exact): Add a parameter to the
	EOFError exception.
	(OuterBuffer.read): Update docstring.

	* src/bridge.py (SignRPMRequestType): Rename from SignRpmRequestType.
	All references updated.

	* src/utils.py (md5_digest): Remove no longer necessary conversions
	between str and buffer.  Fold into the only caller.
	* src/bridge.py (RPMObject, KojiClient): Split from SignRpmRequestType.
	(SignRpmRequestType): Use KojiClient.
	(SignRpmRequestType.forward_reply_payload): Don't keep tmp_file open
	while adding signature to Koji.
	(SignRpmRequestType.close): Call superclass close() method.  Clear
	self.__request_fields for added safety.

	* src/bridge.py (urlgrabber_open): Split from
	SignRpmRequestType.forward_request_payload.
	(SignRpmRequestType.forward_request_payload): Use urlgrabber_open.

	* src/double_tls.py (OuterBuffer.send_outer_eof): New method.
	* src/bridge.py (handle_connection): Make sure we don't send a RST to
	the client before it can handle all reply data.

	* src/bridge.py (InvalidReplyError): New class.
	(handle_connection): Raise InvalidReplyError, not InvalidRequestError.
	(bridge_one_request): Handle InvalidReplyError.

	* src/utils.py (readable_fields): New function.
	* src/bridge.py (handle_connection)
	* src/server.py (ServersConnection.read_request): Use
	utils.readable_fields.

	* src/utils.py (copy_data): New function.
	* src/bridge.py (copy_file_data): Rename from copy_data.  Use
	utils.copy_data.  All callers changed.

	* src/utils.py (write_new_file): Rename parameter.

2010-04-08  Miloslav Trmač  <mitr@redhat.com>

	* src/double_tls.py (OuterBuffer.read, OuterBuffer.write)
	(OuterBuffer.pending_inner_packets, OuterBuffer.add_outer_data): Add
	debug output.

	* src/double_tls.py (_SplittingBuffer._check_shutdown): Fix variable
	name, don't shut down self.__outer_dst over and over.

	* src/double_tls.py (_ForwardingBuffer._handle_errors)
	(_ForwardingBuffer._receive): Comment on possible combinations of
	PR_POLL_IN with other flags.
	(_CombiningBuffer._handle_errors)
	(_CombiningBuffer.__receive_inner)
	(_CombiningBuffer.__receive_outer)
	(_SplittingBuffer._handle_errors, _SplittingBuffer._receive)
	(_InnerBridgingBuffer._handle_errors)
	(_InnerBridgingBuffer._receive): If PR_POLL_IN is set, ignore
	PR_POLL_HUP and PR_POLL_ERR in this iteration.

2010-04-06  Miloslav Trmač  <mitr@redhat.com>

	* src/double_tls.py: (__next_id, __ids, _id): Uncomment.
	(_debug): New function.  Use everywhere instead of commented-out `print'
	to make debugging easier to enable.
	(_CombiningBuffer._prepare_poll): Fix a debug print pasto.

2010-04-02  Miloslav Trmač  <mitr@redhat.com>

	* src/double_tls.py: Drop some unused imports.

2010-03-19  Miloslav Trmač  <mitr@redhat.com>

	* doc/protocol-design.txt: Minor clarifications.

2010-03-10  Miloslav Trmač  <mitr@redhat.com>

	* src/bridge.py (SignRpmRequestType.forward_request_payload): Work with
	recent urlgrabber as well.

2009-07-31  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Release 0.97.
	* NEWS: Update.

	* src/bridge.py (copy_data, StoringProxy.stored_read)
	* src/utils.py (u8_unpack, u32_unpack, read_fields): Rename "bytes"
	to avoid a conflict with a built-in.

	* src/settings.py.in (koji_do_proxy_auth): New variable.
	* src/bridge.py (SignRpmRequestType.__koji_get_session): Proxy
	authenticate as the client if settings allow it.
	* README: Document proxy authentication is now required.

	* src/double_tls.py (DoubleTLSClient.inner_open_server): Log the subject
	of the client's certificate in the server.

	* README: Explicitly mention that host names in configuration must match
	host names in certificates.

	* src/server.py (ServersConnection.read_request): close() the temporary
	file to force it to be written to disk.

	* src/bridge.py (SignRpmRequestType.forward_reply_payload): Remove an
	obsolete comment.

	* src/bridge.py (SignRpmRequestType.__init__): Don't initialize an
	unused member.
	(SignRpmRequestType.__init__, SignRpmRequestType.__koji_get_session):
	Only read koji configuration once.

2009-07-30  Miloslav Trmač  <mitr@redhat.com>

	* src/bridge.py (SignRpmRequestType.close): Don't keep cached
	self.__koji_rpm_info between requests.

	* src/server.py (cmd_sign_rpm): Handle source RPMS specially.

	* src/client.py (cmd_sign_rpm)
	* src/server.py (cmd_sign_rpm): Fix handling of epoch returned from
	Koji.

2009-07-23  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Release 0.96.
	* NEWS: Update.

2009-07-22  Miloslav Trmač  <mitr@redhat.com>

	* src/bridge.py	(SignRpmRequestType.forward_reply_payload): Don't
	attempt to parse empty payloads as RPMs.  Handle corrupted RPMs.

	* src/bridge.py (SignRpmRequestType.forward_reply_payload): close()
	tmp_file to force it to be written to disk, flush() apparently isn't
	enough.

	* src/bridge.py (SignRpmRequestType.__koji_get_session): Authenticate
	when connecting to Koji.
	* README (server): Update.

	* src/bridge.py (main): Fix pid file removal.

	* src/bridge.py (bridge_one_request): Handle ForwardingError
	gracefully.

	* src/bridge.py (SignRpmRequestType.forward_reply_payload): Support
	RSA and v4 signatures.

	* src/double_tls.py (_CombiningBuffer.__receive_inner):
	(_CombiningBuffer.__receive_outer, _InnerBridgingBuffer._receive):
	Handle unexpected connection reset, and poll() that does not provide
	any application-level data.
	(_SplittingBuffer._receive): Don't re-raise the exception on reset
	connection.  Simplify a bit.

	* src/bridge.py (bridge_one_request, main)
	* src/server.py (request_handling_child): Log more useful information
	about NSPRError on RHEL5.

2009-07-18  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Release 0.95.
	* NEWS: Update.

	* src/client.py (ClientsConnection.send_inner)
	(ClientsConnection.read_payload)
	(ClientsConnection.write_payload_to_file)
	(ClientsConnection.__read_header)
	* src/server.py (ServersConnection.read_request)
	(ServersConnection.__send_payload)
	(ServersConnection.send_reply_header): Use M2Crypto.EVP.HMAC instead of
	Python's hmac, which uses incorrect block size in RHEL5.
	* src/utils.py (M2CryptoSHA512DigestMod): Remove.

	* src/utils.py (nss_init._password_callback): Be compatible with both
	python-nss 0.1 and 0.4.

2009-07-17  Miloslav Trmač  <mitr@redhat.com>

	* config/server.conf (database-path): Fix the comments.

2009-07-01  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Release 0.94.
	* NEWS: Update.

	* README: Note that unmodified python-nss >= 0.4 is required.
	* src/utils.py (nss_init._password_callback): Update for python-nss-0.4.

2009-04-10  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Version 0.93.

	* doc/sigul.1.in: Document import-key.
	* README: Document import-key.

	* doc/protocol-design.txt (import-key): New operation.
	* src/client.py (cmd_import_key): New function.
	(command_handlers): Add cmd_import_key.
	* src/errors.py (INVALID_IMPORT, IMPORT_PASSPHRASE_ERROR): New
	definitions.
	(_messages): Update.
	* src/bridge.py (request_types): Add import-key.
	* src/server_common.py (GPGError): New exception class.
	(_restore_gnupg_home, gpg_import_key): New functions.
	(_ChangePasswordResponder): New class.
	(gpg_change_password): New function.
	* src/server.py (random_passphrase): Split from cmd_new_key.
	(cmd_import_key): New function.

	* src/bridge.py: Update to run with newer python-fedora.

	* src/client.py (cmd_grant_key_access): Use read_key_passphrase().

	* src/server.py (cmd_new_key): Remove a redundant check.

2009-01-28  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Version 0.92.
	* NEWS: Update.

	* doc/protoocol-design.txt (sign-rpm): Add optional "v3-signature" field.
	* src/client.py (cmd_sign_rpm): Add --v3-signature.
	* src/bridge.py (request_types): Add v3-signature to sign-rpm.
	* src/server.py (cmd_sign_rpm): Handle v3-signature.

	* src/double_tls.py (DoubleTLSClient.__child)
	* src/server.py (request_handling_child): Handle SystemError (raised
	on SIGTERM) without printing a backtrace.

2009-01-12  Miloslav Trmač  <mitr@redhat.com>

	* configure.ac: Version 0.91.
	* NEWS: Update.

2009-01-11  Miloslav Trmač  <mitr@redhat.com>

	* src/utils.py (M2CryptoSHA512DigestMod): New class.
	* src/client.py (ClientsConnection.connect)
	(ClientsConnection.send_inner)
	* src/server.py (ServersConnection.read_request)
	(ServersConnection.read_request): Use M2Crypto.EVP.MessageDigest instead
	of hashlib, which is not supported by Python 2.4.
	* src/client.py (read_password): Read password from stdin, the second
	argument to getpass.getpass() is not supported by Python 2.4.
	* src/server.py (cmd_sign_rpm): Define '_signature gpg', which is
	required by RHEL5 rpm.

	* README: Make it clear when a CA private key is copied, describe how
	to avoid doing so.

	* src/client.py (main): Don't frighten users with exceptions on
	PR_END_OF_FILE_ERROR.
